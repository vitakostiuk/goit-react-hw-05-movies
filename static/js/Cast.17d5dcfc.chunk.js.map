{"version":3,"file":"static/js/Cast.17d5dcfc.chunk.js","mappings":"wQAEaA,EAAS,SAAAC,GACpB,OAAOA,EAAQC,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAWC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAMnD,MAAO,CAAEH,KAAAA,EAAMC,UAAAA,EAAWG,iBAJPF,EAAY,0CACQA,GACnCG,EAEwCF,GAAAA,OCRhD,GAAgB,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,SAAW,8B,SCEhHG,EAAa,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QAC3B,OACE,eAAIS,UAAWC,EAAAA,KAAf,SACGV,EAAQC,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAWG,EAApB,EAAoBA,iBAAkBD,EAAtC,EAAsCA,GAAtC,OACX,gBAAaI,UAAWC,EAAAA,KAAxB,WACE,gBACEC,IAAKL,EACLM,IAAKT,EACLU,MAAM,MACNC,OAAO,MACPL,UAAWC,EAAAA,OAEb,cAAGD,UAAWC,EAAAA,MAAd,SAAwBR,KACxB,0BACE,iBAAMO,UAAWC,EAAAA,MAAjB,yBACCP,OAXIE,SCwBjB,EAzBa,WACX,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOf,EAAP,KAAgBgB,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEDC,EAAAA,EAAAA,GAAUJ,GAFT,OAEdK,EAFc,OAGlBR,GAAW,OAAIjB,EAAOyB,EAAKC,QAHT,gDAKlBP,EAAS,EAAD,IALU,yDAAH,qDAQnBI,MACC,CAACH,KAGF,iCACE,SAACX,EAAD,CAAYR,QAASA,IACpBiB,IAAS,yBAAMA,EAAMS,e,8ECtBb,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/utils/mapperActors.js","webpack://react-homework-template/./src/components/ActorsList/ActorsList.module.css?94a0","components/ActorsList/ActorsList.js","components/pages/Cast.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import emptyImg from '../../images/img_not_found.jpg';\n\nexport const mapper = credits => {\n  return credits.map(({ name, character, profile_path, id }) => {\n    let normalizedPoster = '';\n    normalizedPoster = profile_path\n      ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n      : emptyImg;\n\n    return { name, character, normalizedPoster, id };\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ActorsList_List__wfKRy\",\"Item\":\"ActorsList_Item__U76gf\",\"Title\":\"ActorsList_Title__9eHxL\",\"paragraf\":\"ActorsList_paragraf__wrZBM\"};","import PropTypes from 'prop-types';\nimport s from './ActorsList.module.css';\n\nexport const ActorsList = ({ credits }) => {\n  return (\n    <ul className={s.List}>\n      {credits.map(({ name, character, normalizedPoster, id }) => (\n        <li key={id} className={s.Item}>\n          <img\n            src={normalizedPoster}\n            alt={character}\n            width=\"150\"\n            height=\"225\"\n            className={s.Img}\n          />\n          <p className={s.Title}>{name}</p>\n          <p>\n            <span className={s.Title}>Character: </span>\n            {character}\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nActorsList.propTypes = {\n  credits: PropTypes.arrayOf(\n    PropTypes.shape({\n      character: PropTypes.string,\n      name: PropTypes.string,\n      normalizedPoster: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../services/movies-api';\nimport { mapper } from '../utils/mapperActors';\nimport { ActorsList } from '../ActorsList';\n\nconst Cast = () => {\n  const [credits, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActorsInfo = async () => {\n      try {\n        let data = await fetchCast(movieId);\n        setCredits([...mapper(data.cast)]);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getActorsInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      <ActorsList credits={credits} />\n      {error && <div>{error.message}</div>}\n    </>\n  );\n};\n\nexport default Cast;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["mapper","credits","map","name","character","profile_path","id","normalizedPoster","emptyImg","ActorsList","className","s","src","alt","width","height","useState","setCredits","error","setError","movieId","useParams","useEffect","getActorsInfo","fetchCast","data","cast","message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}