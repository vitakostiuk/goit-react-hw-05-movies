{"version":3,"file":"static/js/Reviews.97a095e7.chunk.js","mappings":"+PAAaA,EAAS,SAAAC,GACpB,OAAOA,EAAQC,KAAI,YAA0D,IAAD,IAAtDC,eAAkBC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,SAE5C,MAAO,CAAEC,eADcF,GAAcC,EACZE,QAFiD,EAAlBA,QAEtBC,GAFwC,EAATA,QCArE,EAAuB,0BAAvB,EAAwD,0BAAxD,EAA0F,2BAA1F,EAAgI,8B,SCEnHC,EAAc,SAAC,GAAiB,IAAfR,EAAc,EAAdA,QAC5B,OAAuB,IAAnBA,EAAQS,QACH,cAAGC,UAAWC,EAAd,wDAGP,eAAID,UAAWC,EAAf,SACGX,EAAQC,KAAI,gBAAGI,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,QAASC,EAA5B,EAA4BA,GAA5B,OACX,gBAAaG,UAAWC,EAAxB,WACE,0BACE,iBAAMD,UAAWC,EAAjB,sBACCN,MAEH,cAAGK,UAAWC,EAAd,SAA2BL,MALpBC,SCqBjB,EAzBgB,WACd,OAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOZ,EAAP,KAAgBa,EAAhB,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,mCAAG,8GAEDC,EAAAA,EAAAA,IAAaJ,GAFZ,OAEdK,EAFc,OAGlBR,GAAW,OAAId,EAAOsB,EAAKC,WAHT,gDAKlBP,EAAS,EAAD,IALU,yDAAH,qDAQnBI,MACC,CAACH,KAGF,iCACE,SAACR,EAAD,CAAaR,QAASA,IACrBc,IAAS,yBAAMA,EAAMS,e,8ECtBb,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/utils/mapperReviews.js","webpack://react-homework-template/./src/components/ReviewsCard/ReviewsCard.module.css?e220","components/ReviewsCard/ReviewsCard.js","components/pages/Reviews.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["export const mapper = reviews => {\n  return reviews.map(({ author_details: { name, username }, content, id }) => {\n    const normalizedName = name ? name : username;\n    return { normalizedName, content, id };\n  });\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ReviewsCard_List__XaAPT\",\"Item\":\"ReviewsCard_Item__z-tYn\",\"Title\":\"ReviewsCard_Title__2beqh\",\"Paragraf\":\"ReviewsCard_Paragraf__565Lt\"};","import PropTypes from 'prop-types';\nimport s from './ReviewsCard.module.css';\n\nexport const ReviewsCard = ({ reviews }) => {\n  if (reviews.length === 0) {\n    return <p className={s.Title}>We don't have any reviews for this movie.</p>;\n  }\n  return (\n    <ul className={s.List}>\n      {reviews.map(({ normalizedName, content, id }) => (\n        <li key={id} className={s.Item}>\n          <p>\n            <span className={s.Title}>Author: </span>\n            {normalizedName}\n          </p>\n          <p className={s.Paragraf}>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nReviewsCard.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      content: PropTypes.string,\n      id: PropTypes.string,\n      normalizedName: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from '../services/movies-api';\nimport { mapper } from '../utils/mapperReviews';\nimport { ReviewsCard } from '../ReviewsCard';\n\nconst Reviews = () => {\n  const [reviews, setCredits] = useState([]);\n  const [error, setError] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getActorsInfo = async () => {\n      try {\n        let data = await fetchReviews(movieId);\n        setCredits([...mapper(data.results)]);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getActorsInfo();\n  }, [movieId]);\n\n  return (\n    <>\n      <ReviewsCard reviews={reviews} />\n      {error && <div>{error.message}</div>}\n    </>\n  );\n};\n\nexport default Reviews;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["mapper","reviews","map","author_details","name","username","normalizedName","content","id","ReviewsCard","length","className","s","useState","setCredits","error","setError","movieId","useParams","useEffect","getActorsInfo","fetchReviews","data","results","message","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}