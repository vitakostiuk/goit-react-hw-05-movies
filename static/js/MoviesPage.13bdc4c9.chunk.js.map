{"version":3,"file":"static/js/MoviesPage.13bdc4c9.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.js","components/pages/MoviesPage.js","components/services/movies-api.js","components/utils/mapper.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MoviesList_List__solOa\",\"Item\":\"MoviesList_Item__6qotj\",\"Title\":\"MoviesList_Title__DsIvd\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies, location }) => {\n  // console.log(location);\n  return (\n    <ul className={s.List}>\n      {movies &&\n        movies.map(({ id, normalizedTitle, normalizedPoster }) => (\n          <Link\n            to={{ pathname: `/movies/${id}`, state: { from: location } }}\n            key={id}\n            className={s.Item}\n          >\n            <div className={s.Wrapper}>\n              <img\n                src={normalizedPoster}\n                alt={normalizedTitle}\n                width=\"150\"\n                height=\"225\"\n                className={s.Img}\n              />\n              <h2 className={s.Title}>{normalizedTitle}</h2>\n            </div>\n          </Link>\n        ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      normalizedTitle: PropTypes.string,\n      normalizedPoster: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"SearchForm_Form__vRFa9\",\"Button\":\"SearchForm_Button__lpHv7\",\"Input\":\"SearchForm_Input__C5DWT\"};","import { MdOutlineSearch } from 'react-icons/md';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './SearchForm.module.css';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [filmName, setFilmName] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit(filmName);\n    setFilmName('');\n  };\n\n  return (\n    <form className={s.Form} onSubmit={handleSubmit}>\n      <button type=\"submit\" className={s.Button} aria-label=\"Search images\">\n        <MdOutlineSearch size=\"18\" fill=\"#7a7a7a\" />\n      </button>\n\n      <input\n        className={s.Input}\n        type=\"text\"\n        name=\"imgName\"\n        value={filmName}\n        onChange={e => setFilmName(e.currentTarget.value.toLowerCase())}\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies...\"\n      />\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { SearchForm } from '../SearchForm';\nimport { movieSearch } from '../services/movies-api';\nimport { MoviesList } from 'components/MoviesList';\nimport { Container } from '../Container';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { mapper } from '../utils/mapper';\n\nconst MoviesPage = () => {\n  const [filmName, setFilmName] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  const history = useHistory();\n  // console.log(history);\n  const location = useLocation();\n  // console.log(location);\n\n  useEffect(() => {\n    if (filmName === '') return;\n\n    const getSearchMovies = async () => {\n      try {\n        let data = await movieSearch(filmName);\n        setMovies([...mapper(data.results)]);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getSearchMovies();\n  }, [filmName]);\n\n  const onSearchFilmsSubmit = filmName => {\n    setFilmName(filmName);\n    history.push({ ...location, search: `query=${filmName}` });\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={onSearchFilmsSubmit} />\n      {movies && <MoviesList movies={movies} location={location} />}\n      {error && <div>{error.message}</div>}\n    </Container>\n  );\n};\n\nexport default MoviesPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3b4cb0b5c3c509ec710c203c7a14be66';\n\nconst fetchWithErrorHandling = async (url = '', config = {}) => {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`Something went wrong`));\n};\n\nexport const fetchTrending = () => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieById = id => {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const movieSearch = searchQuery => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n};\n\nexport const fetchCast = id => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchReviews = id => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n","import emptyImg from '../../images/img_not_found.jpg';\n\nexport const mapper = movies => {\n  return movies.map(({ id, title, name, poster_path }) => {\n    const normalizedTitle = title ? title : name;\n    let normalizedPoster = '';\n    normalizedPoster = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : emptyImg;\n\n    return { id, normalizedTitle, normalizedPoster };\n  });\n};\n"],"names":["MoviesList","movies","location","className","s","map","id","normalizedTitle","normalizedPoster","to","pathname","state","from","src","alt","width","height","SearchForm","onSubmit","useState","filmName","setFilmName","e","preventDefault","type","size","fill","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","setMovies","error","setError","history","useHistory","useLocation","useEffect","getSearchMovies","movieSearch","data","mapper","results","Container","push","search","message","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchMovieById","searchQuery","fetchCast","fetchReviews","title","poster_path","emptyImg"],"sourceRoot":""}