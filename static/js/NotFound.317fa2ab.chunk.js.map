{"version":3,"file":"static/js/NotFound.317fa2ab.chunk.js","mappings":"gMACA,GAAgB,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,2B,SCG3EA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAAA,KAAf,SACGJ,GACCA,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,gBAAiBC,EAAxB,EAAwBA,iBAAxB,OACT,SAAC,KAAD,CACEC,GAAI,CAAEC,SAAS,WAAD,OAAaJ,GAAMK,MAAO,CAAEC,KAAMX,IAEhDE,UAAWC,EAAAA,KAHb,UAKE,iBAAKD,UAAWC,EAAAA,QAAhB,WACE,gBACES,IAAKL,EACLM,IAAKP,EACLQ,MAAM,MACNC,OAAO,MACPb,UAAWC,EAAAA,OAEb,eAAID,UAAWC,EAAAA,MAAf,SAAyBG,QAXtBD,U,kICmBjB,UA1BiB,WACf,OAA4BW,EAAAA,EAAAA,UAAS,IAArC,eAAOjB,EAAP,KAAekB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAgBA,OAdAC,OAAOC,aAAaC,SAEpBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAELC,EAAAA,EAAAA,MAFK,OAElBC,EAFkB,OAGtBT,GAAU,QAAIU,EAAAA,EAAAA,GAAOD,EAAKE,WAHJ,gDAKtBT,EAAS,EAAD,IALc,yDAAH,qDAQvBK,MACC,KAGD,UAAC,IAAD,WACGN,IAAS,yBAAMA,EAAMW,WACtB,SAAC,IAAD,CAAY9B,OAAQA,S,+CCjB1B,UARiB,WACf,OACE,+BACE,SAAC,UAAD,Q,mLCLA+B,EAAW,+BACXC,EAAU,mCAEVC,EAAsB,mCAAG,2GAAOC,EAAP,+BAAa,GAAIC,EAAjB,+BAA0B,GAA1B,SACNC,MAAMF,EAAKC,GADL,YACvBE,EADuB,QAEbC,GAFa,iCAGnBD,EAASE,OAHU,gDAIzBC,QAAQC,OAAO,IAAIC,MAAJ,yBAJU,mFAAH,qDAOfhB,EAAgB,WAC3B,OAAOO,EAAuB,GAAD,OACxBF,EADwB,uCACeC,KAIjCW,EAAiB,SAAArC,GAC5B,OAAO2B,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBzB,EAAtB,oBAAoC0B,KAGtDY,EAAc,SAAAC,GACzB,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iCACSC,EADT,kBAC0Ba,KAI5CC,EAAY,SAAAxC,GACvB,OAAO2B,EAAuB,GAAD,OACxBF,EADwB,kBACNzB,EADM,4BACgB0B,KAIlCe,EAAe,SAAAzC,GAC1B,OAAO2B,EAAuB,GAAD,OACxBF,EADwB,kBACNzB,EADM,4BACgB0B,M,iEChClCJ,EAAS,SAAA5B,GACpB,OAAOA,EAAOK,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAI0C,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAOpC,MAAO,CAAE5C,GAAAA,EAAIC,gBANWyC,GAAgBC,EAMVzC,iBAJX0C,EAAW,0CACSA,GACnCC,Q,2rKCJO,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAM1C,KAAK6C,GFInF,CAAgBJ,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,wIHIwE","sources":["webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.js","components/pages/HomePage.js","components/pages/NotFound.js","components/services/movies-api.js","components/utils/mapper.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"List\":\"MoviesList_List__solOa\",\"Item\":\"MoviesList_Item__6qotj\",\"Title\":\"MoviesList_Title__DsIvd\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  // console.log(location);\n  return (\n    <ul className={s.List}>\n      {movies &&\n        movies.map(({ id, normalizedTitle, normalizedPoster }) => (\n          <Link\n            to={{ pathname: `/movies/${id}`, state: { from: location } }}\n            key={id}\n            className={s.Item}\n          >\n            <div className={s.Wrapper}>\n              <img\n                src={normalizedPoster}\n                alt={normalizedTitle}\n                width=\"150\"\n                height=\"225\"\n                className={s.Img}\n              />\n              <h2 className={s.Title}>{normalizedTitle}</h2>\n            </div>\n          </Link>\n        ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      normalizedTitle: PropTypes.string,\n      normalizedPoster: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrending } from '../services/movies-api';\nimport { MoviesList } from '../MoviesList';\nimport { Container } from '../Container';\nimport { mapper } from '../utils/mapper';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  window.localStorage.clear();\n\n  useEffect(() => {\n    const getMoviesTrending = async () => {\n      try {\n        let data = await fetchTrending();\n        setMovies([...mapper(data.results)]);\n      } catch (error) {\n        setError(error);\n      }\n    };\n    getMoviesTrending();\n  }, []);\n\n  return (\n    <Container>\n      {error && <div>{error.message}</div>}\n      <MoviesList movies={movies} />\n    </Container>\n  );\n};\n\nexport default HomePage;\n","import HomePage from './HomePage';\n\nconst NotFound = () => {\n  return (\n    <>\n      <HomePage />\n    </>\n  );\n};\n\nexport default NotFound;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3b4cb0b5c3c509ec710c203c7a14be66';\n\nconst fetchWithErrorHandling = async (url = '', config = {}) => {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`Something went wrong`));\n};\n\nexport const fetchTrending = () => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieById = id => {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const movieSearch = searchQuery => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n};\n\nexport const fetchCast = id => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchReviews = id => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n","import emptyImg from '../../images/img_not_found.jpg';\n\nexport const mapper = movies => {\n  return movies.map(({ id, title, name, poster_path }) => {\n    const normalizedTitle = title ? title : name;\n    let normalizedPoster = '';\n    normalizedPoster = poster_path\n      ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n      : emptyImg;\n\n    return { id, normalizedTitle, normalizedPoster };\n  });\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["MoviesList","movies","location","useLocation","className","s","map","id","normalizedTitle","normalizedPoster","to","pathname","state","from","src","alt","width","height","useState","setMovies","error","setError","window","localStorage","clear","useEffect","getMoviesTrending","fetchTrending","data","mapper","results","message","BASE_URL","API_KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchMovieById","movieSearch","searchQuery","fetchCast","fetchReviews","title","name","poster_path","emptyImg","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}