{"version":3,"file":"static/js/MovieDetailsPage.ceac3627.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.js","webpack://react-homework-template/./src/components/GoToBack/GoToBack.module.css?913a","components/GoToBack/GoToBack.js","webpack://react-homework-template/./src/components/pages/MovieDetailsPage.module.css?7d9b","components/pages/MovieDetailsPage.js","components/services/movies-api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"MovieCard_Wrapper__Dhi3B\",\"Thumb\":\"MovieCard_Thumb__KQgpQ\",\"Img\":\"MovieCard_Img__--Omj\",\"Subtitle\":\"MovieCard_Subtitle__+TAOP\",\"Paragraf\":\"MovieCard_Paragraf__Kzf1r\"};","import PropTypes from 'prop-types';\nimport s from './MovieCard.module.css';\n\nexport const MovieCard = ({ movie }) => {\n  const {\n    title,\n    normalizedPoster,\n    overview,\n    normalizedGenres,\n    normalizedYear,\n    normalizedPopularity,\n  } = movie;\n\n  return (\n    <>\n      <div className={s.Wrapper}>\n        <img src={normalizedPoster} alt={title} width=\"250\" className={s.Img} />\n\n        <div className={s.Thumb}>\n          <h2>\n            {title}({normalizedYear})\n          </h2>\n          <p className={s.Paragraf}>User score: {normalizedPopularity}</p>\n          <h3 className={s.Subtitle}>Overview</h3>\n          <p className={s.Paragraf}>{overview}</p>\n          <h3 className={s.Subtitle}>Genres</h3>\n          <p className={s.Paragraf}>{normalizedGenres}</p>\n        </div>\n      </div>\n    </>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    overview: PropTypes.string,\n    normalizedGenres: PropTypes.string,\n    normalizedYear: PropTypes.number,\n    normalizedPopularity: PropTypes.number,\n  }).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Back\":\"GoToBack_Back__bm943\"};","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport s from './GoToBack.module.css';\n\nexport const GoToBack = ({ onClick }) => (\n  <Link to=\"\" className={s.Back}>\n    &#10094; Go back\n  </Link>\n);\n\nGoToBack.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Wrapper\":\"MovieDetailsPage_Wrapper__Yczgt\",\"Link\":\"MovieDetailsPage_Link__vgqnH\",\"Active\":\"MovieDetailsPage_Active__LBJ-a\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  Route,\n  useRouteMatch,\n  NavLink,\n  useParams,\n  useHistory,\n} from 'react-router-dom';\nimport { fetchMovieById } from '../services/movies-api';\nimport { MovieCard } from '../MovieCard';\nimport emptyImg from '../../images/img_not_found.jpg';\n// import { Cast } from './Cast';\n// import { Reviews } from './Reviews';\nimport { Container } from '../Container';\nimport { GoToBack } from '../GoToBack';\nimport s from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('./Cast.js' /* webpackChunkName: 'Cast' */));\nconst Reviews = lazy(() =>\n  import('./Reviews.js' /* webpackChunkName: 'Reviews' */)\n);\n\nconst MovieDetailsPage = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const { url, path } = useRouteMatch();\n  // console.log(url);\n  const history = useHistory();\n  // console.log(history);\n\n  useEffect(() => {\n    const fetchMovieInfo = async () => {\n      try {\n        let data = await fetchMovieById(movieId);\n        const {\n          id,\n          title,\n          poster_path,\n          overview,\n          release_date,\n          genres,\n          popularity,\n        } = data;\n        const normalizedYear = new Date(release_date).getFullYear();\n        const normalizedGenres = genres.map(genre => genre.name).join(', ');\n        const normalizedPopularity = Math.round(popularity);\n        let normalizedPoster = '';\n        normalizedPoster = poster_path\n          ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n          : emptyImg;\n        setMovie({\n          id,\n          title,\n          normalizedPoster,\n          overview,\n          normalizedGenres,\n          normalizedYear,\n          normalizedPopularity,\n        });\n      } catch (error) {\n        setError(error);\n      }\n    };\n    fetchMovieInfo();\n  }, [movieId]);\n\n  const onClickGoBack = () => {\n    history.push('/');\n  };\n\n  // const onClickGoBack = () => {\n  //   history.push(`${url}/${search}`);\n  // };\n\n  return (\n    <>\n      {error && <div>{error.message}</div>}\n      <Container>\n        <GoToBack onClick={onClickGoBack} />\n        {movie && <MovieCard movie={movie} onClick={onClickGoBack} />}\n        <div className={s.Wrapper}>\n          <NavLink\n            to={`${url}/cast`}\n            className={s.Link}\n            activeClassName={s.Active}\n          >\n            Cast\n          </NavLink>\n          <NavLink\n            to={`${url}/reviews`}\n            className={s.Link}\n            activeClassName={s.Active}\n          >\n            Reviews\n          </NavLink>\n        </div>\n        <Suspense fallback={<div>Loading...</div>}>\n          <Route path={`${path}/cast`}>\n            <Cast />\n          </Route>\n          <Route path={`${path}/reviews`}>\n            <Reviews />\n          </Route>\n        </Suspense>\n      </Container>\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n","const BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = '3b4cb0b5c3c509ec710c203c7a14be66';\n\nconst fetchWithErrorHandling = async (url = '', config = {}) => {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`Something went wrong`));\n};\n\nexport const fetchTrending = () => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchMovieById = id => {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`);\n};\n\nexport const movieSearch = searchQuery => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n  );\n};\n\nexport const fetchCast = id => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n};\n\nexport const fetchReviews = id => {\n  return fetchWithErrorHandling(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n};\n"],"names":["MovieCard","movie","title","normalizedPoster","overview","normalizedGenres","normalizedYear","normalizedPopularity","className","s","src","alt","width","GoToBack","onClick","to","Cast","lazy","Reviews","useState","setMovie","error","setError","movieId","useParams","useRouteMatch","url","path","history","useHistory","useEffect","fetchMovieInfo","fetchMovieById","data","id","poster_path","release_date","genres","popularity","Date","getFullYear","map","genre","name","join","Math","round","emptyImg","onClickGoBack","push","message","Container","activeClassName","Suspense","fallback","BASE_URL","API_KEY","fetchWithErrorHandling","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","movieSearch","searchQuery","fetchCast","fetchReviews"],"sourceRoot":""}